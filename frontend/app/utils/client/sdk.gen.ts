// This file is auto-generated by @hey-api/openapi-ts

import type { Client, Options as Options2, TDataShape } from './client';
import { client } from './client.gen';
import type { GetApiV1AuthStatusData, GetApiV1AuthStatusErrors, GetApiV1AuthStatusResponses, GetApiV1StatusData, GetApiV1StatusErrors, GetApiV1StatusResponses, PostApiV1AuthLoginData, PostApiV1AuthLoginErrors, PostApiV1AuthLoginResponses, PostApiV1AuthLogoutData, PostApiV1AuthLogoutErrors, PostApiV1AuthLogoutResponses, PostApiV1DownloadData, PostApiV1DownloadErrors, PostApiV1DownloadResponses, PostApiV1SortDownloadsData, PostApiV1SortDownloadsErrors, PostApiV1SortDownloadsResponses } from './types.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = Options2<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Post API v1 auth login
 */
export const postApiV1AuthLogin = <ThrowOnError extends boolean = false>(options: Options<PostApiV1AuthLoginData, ThrowOnError>) => {
    return (options.client ?? client).post<PostApiV1AuthLoginResponses, PostApiV1AuthLoginErrors, ThrowOnError>({
        url: '/api/v1/auth/login',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Post API v1 auth logout
 */
export const postApiV1AuthLogout = <ThrowOnError extends boolean = false>(options?: Options<PostApiV1AuthLogoutData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiV1AuthLogoutResponses, PostApiV1AuthLogoutErrors, ThrowOnError>({
        url: '/api/v1/auth/logout',
        ...options
    });
};

/**
 * Get API v1 auth status
 */
export const getApiV1AuthStatus = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1AuthStatusData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiV1AuthStatusResponses, GetApiV1AuthStatusErrors, ThrowOnError>({
        url: '/api/v1/auth/status',
        ...options
    });
};

/**
 * Post API v1 download
 */
export const postApiV1Download = <ThrowOnError extends boolean = false>(options: Options<PostApiV1DownloadData, ThrowOnError>) => {
    return (options.client ?? client).post<PostApiV1DownloadResponses, PostApiV1DownloadErrors, ThrowOnError>({
        url: '/api/v1/download',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Post API v1 sort downloads
 */
export const postApiV1SortDownloads = <ThrowOnError extends boolean = false>(options?: Options<PostApiV1SortDownloadsData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiV1SortDownloadsResponses, PostApiV1SortDownloadsErrors, ThrowOnError>({
        url: '/api/v1/sort-downloads',
        ...options
    });
};

/**
 * Get API v1 status
 */
export const getApiV1Status = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1StatusData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiV1StatusResponses, GetApiV1StatusErrors, ThrowOnError>({
        url: '/api/v1/status',
        ...options
    });
};
